---
# Source: schema-registry/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ktool-schema-registry
  namespace: demo
  labels:
    helm.sh/chart: schema-registry-0.1.0
    app.kubernetes.io/name: schema-registry
    app.kubernetes.io/instance: ktool
    app.kubernetes.io/version: "6.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
  - name: tcp
    port: 8081
    protocol: TCP
    targetPort: tcp
  selector:
    app.kubernetes.io/name: schema-registry
    app.kubernetes.io/instance: ktool
---
# Source: schema-registry/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ktool-schema-registry
  namespace: demo
  labels:
    helm.sh/chart: schema-registry-0.1.0
    app.kubernetes.io/name: schema-registry
    app.kubernetes.io/instance: ktool
    app.kubernetes.io/version: "6.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: schema-registry
      app.kubernetes.io/instance: ktool
  template:
    metadata:
      labels:
        app.kubernetes.io/name: schema-registry
        app.kubernetes.io/instance: ktool
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: schema-registry
          imagePullPolicy: IfNotPresent
          image: "docker.io/confluentinc/cp-schema-registry:6.2.0"
          env:
            - name: SCHEMA_REGISTRY_HOST_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: SCHEMA_REGISTRY_LISTENERS
              value: "http://0.0.0.0:8081"
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: PLAINTEXT://kafka-service:9092
            - name: SCHEMA_REGISTRY_KAFKASTORE_GROUP_ID
              value: "ktool-schema-registry"
            - name: SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID
              value: "ktool-schema-registry"
            - name: SCHEMA_REGISTRY_MASTER_ELIGIBILITY
              value: "true"
            - name: SCHEMA_REGISTRY_HEAP_OPTS
              value: "-XX:MaxRAMPercentage=75.0 -XX:InitialRAMPercentage=50.0"
            - name: SCHEMA_REGISTRY_CONFLUENT_SUPPORT_METRICS_ENABLE
              value: "false"
            - name: SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS
              value: "GET,POST,PUT,OPTIONS"
            - name: SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN
              value: "*"
            - name: SCHEMA_REGISTRY_SCHEMA_COMPATIBILITY_LEVEL
              value: "full"
          ports:
            - name: tcp
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: tcp
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: tcp
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: config
            mountPath: /etc/schema-registry              
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          resources:
            limits:
              cpu: 200m
              memory: 1400Mi
            requests:
              cpu: 100m
              memory: 512Mi
      volumes:
      - name: tmp
        emptyDir: {}
      - name: config
        emptyDir: {}
